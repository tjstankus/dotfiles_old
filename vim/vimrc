"
" pathogen
"
call pathogen#infect()
syntax on
filetype plugin indent on

"
" various settings based on http://stevelosh.com/blog/2010/09/coming-home-to-vim/
"
set nocompatible
set modelines=0

"
" tabs
"
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

"
" misc
"
set encoding=utf-8
set autoindent
let mapleader = ","
set hidden " allow unwritten buffers to be hidden
set wildmenu
set wildmode=list:longest
set visualbell
set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start " make backspace/delete work as expected
set laststatus=2
set noswapfile
set nowrap
set colorcolumn=81
set linespace=1
set clipboard=unnamed " copy to OS copy buffer
set nojoinspaces " only one space after a '.', '?', or '!'
nnoremap <leader>w :w<cr>
" imap jj <Esc>l:w<CR>
inoremap <C-u> <Esc>:w<CR>l



" these two settings in combination use relative numbering on all lines
" except for the current line, which displays the absolute number
set number
set relativenumber

"
" search
"
nnoremap / /\v
vnoremap / /\v
set ignorecase
set smartcase
set hlsearch
nnoremap <leader><space> :noh<cr>

" terminal timeouts
set timeoutlen=1000
set ttimeoutlen=0

" set the cursor to a vertical line in insert mode and a solid block
" in command mode
" let &t_SI = "\<Esc>]50;CursorShape=1\x7"
" let &t_EI = "\<Esc>]50;CursorShape=0\x7"


" colors
"
colorscheme Tomorrow-Night

"
" ctrl-p
"
let ctrlp_map = '<leader>t'
nmap <leader>b :CtrlPBuffer<CR>
let g:ctrlp_dont_split = 'nerdtree'
let g:ctrlp_custom_ignore = '\v[\/](doc|coverage|tmp|vendor)|(\.(swp|ico|git|svn))$'
" let g:ctrlp_custom_ignore = {
"   \ 'dir':  '\v[\/]\.(git|hg|svn)$',
"   \ 'file': '\v\.(exe|so|dll)$',
"   \ 'link': 'SOME_BAD_SYMBOLIC_LINKS',
"   \ }

"
" nerdtree
"
let g:NERDTreeShowLineNumbers=1
let g:NERDTreeShowHidden=1

"
" powerline
"
let g:Powerline_stl_path_style='short'

"
" vroom
"
let g:vroom_use_colors = 1
let g:vroom_use_bundle_exec = 1
" let g:vroom_use_binstubs = 1
" let g:vroom_binstubs_path = './.bundle/.binstubs'

"
" vim-flavored-markdown (github-flavored markdown for vim)
" https://github.com/jtratner/vim-flavored-markdown
"
augroup markdown
  au!
  au BufNewFile,BufRead *.md,*.markdown setlocal filetype=ghmarkdown
augroup END

"
" markdown headers
"
nnoremap <leader>1 yypVr=o<Esc>o<Esc>
nnoremap <leader>2 yypVr-o<Esc>o<Esc>

" markdown fenced code blocks
let g:markdown_fenced_languages = ['coffee', 'css', 'erb=eruby', 'javascript', 'js=javascript', 'json=javascript', 'ruby', 'sass', 'xml']

"
" format paragraph
"
nnoremap <leader>p gqip

"
" strip trailing whitespace
"
function! <SID>StripTrailingWhitespaces()
    " save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " strip whitespace
    %s/\s\+$//e
    " restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

" strip whitespace for all files on write
autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()

" soft wrap via :Wrap command
command! -nargs=* Wrap set wrap linebreak nolist

" save file when switch away, swallow errors
autocmd BufLeave,FocusLost * silent! wall

" remap . key in visual mode
vnoremap . :norm.<CR>

" go back to normal mode after save
" works particularly well for macvim <D-s> saves
autocmd BufWritePost * stopinsert

"
" command shortcuts
"
command! Cpcc CtrlPClearCache
command! Bdbd bufdo bdelete
command! Ebd e `dirname %`

"
" Line number colors
"
" Entering insert mode
autocmd InsertEnter * highlight CursorLineNr ctermbg=031
" Leaving insert mode
autocmd InsertLeave * highlight CursorLineNr ctermbg=235

"
" experimental
"

" avoid xattrs getting overwritten, especially for Deckset
set backupcopy=yes

"
" temp
"
" nnoremap Q :!bundle exec rspec spec<CR>
" nnoremap Q :!rspec spec/bowling_game_spec.rb<CR>
" nnoremap Q :!ruby bottles/test/bottles_test.rb<CR>
